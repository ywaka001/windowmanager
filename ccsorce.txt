#include <gtk/gtk.h>
#include <gdk/gdkx.h>

int main(int argc, char *argv[]) {
  gtk_init(&argc, &argv);

  // create a new GtkApplication
  GtkApplication *app = gtk_application_new("org.gtk.example", G_APPLICATION_FLAGS_NONE);

  // connect to the "activate" signal
  g_signal_connect(app, "activate", G_CALLBACK(activate), NULL);

  // get the default screen and display
  GdkScreen *screen = gdk_screen_get_default();
  GdkDisplay *display = gdk_screen_get_display(screen);

  // set the display to the second screen
  GdkDisplay *display2 = gdk_display_open(":1.0");
  GdkScreen *screen2 = gdk_display_get_default_screen(display2);

  // set the default screen and display to the second screen
  gdk_screen_set_default(screen2);
  gdk_display_set_default(display2);

  // run the GtkApplication
  int status = g_application_run(G_APPLICATION(app), argc, argv);

  // clean up
  g_object_unref(app);

  return status;
}




import 'dart:io';
import 'package:flutter/widgets.dart';
import 'package:flutter_window_manager/flutter_window_manager.dart';

void main() async {
  // Set the second screen as the target display
  final display = ':0.1'; // Change this to the correct display ID
  Platform.environment['DISPLAY'] = display;

  // Initialize the Flutter app
  WidgetsFlutterBinding.ensureInitialized();

  // Get the current screen size
  final size = await FlutterWindowManager.getWindowInfo().then((window) => window.size);

  // Create window data and set the target screen
  final windowData = WindowData(
    title: 'MyApp',
    width: size.width,
    height: size.height,
    screen: display,
  );

  // Launch the app with the specified window data
  runApp(MyApp(windowData: windowData));
}

class MyApp extends StatelessWidget {
  const MyApp({Key? key, required this.windowData}) : super(key: key);

  final WindowData windowData;

  @override
  Widget build(BuildContext context) {
    return WidgetsApp(
      color: Colors.blue,
      title: windowData.title,
      builder: (context, _) => Center(
        child: Text('Hello, world!'),
      ),
    );
  }
}
